from pyvis.network import Network
import streamlit as st 
import pandas as pd



def mostrar_esquema_fifa():
    # Crear un objeto Network
    network = Network(height="750px", width="100%", notebook=True)

    # Agregar nodos
    nodos = [
        ('√ìrganos', 'Congreso'),
        ('√ìrganos', 'Consejo'),
        ('√ìrganos', 'Presidente'),
        ('√ìrganos', 'Secretar√≠a General'),
        ('√ìrganos', 'Bureau del Consejo'),
        ('√ìrganos', 'Comisiones Permanentes'),
        ('Comisiones Permanentes', 'Comisi√≥n de Finanzas'),
        ('Comisiones Permanentes', 'Comisi√≥n de Desarrollo'),
        ('Comisiones Permanentes', 'Comisi√≥n Organizadora de Competiciones de la FIFA'),
        ('Comisiones Permanentes', 'Comisi√≥n de Grupos de Inter√©s del F√∫tbol'),
        ('Comisiones Permanentes', 'Comisi√≥n de Federaciones Miembro'),
        ('Comisiones Permanentes', 'Comisi√≥n de √Årbitros'),
        ('Comisiones Permanentes', 'Comisi√≥n de Medicina')
    ]

    for parent, child in nodos:
        network.add_node(parent, parent, title=parent)
        network.add_node(child, child, title=child)
        network.add_edge(parent, child)

    # Mostrar la red
    return network





def esquema_formacion():
    esquema = {
        "Reglas": [
            "Si el club anterior no ofrece contrato, no hay indemnizaci√≥n por Formaci√≥n",
            "Para calcular la indemnizaci√≥n, se clasifican los clubes en m√°ximo cuatro categor√≠as",
            "Formaci√≥n entre 12 y 15 a√±os se estima seg√∫n clubes de la cuarta categor√≠a",
            "Tiempo l√≠mite para reclamar derecho de formaci√≥n: final de temporada al cumplir 23 a√±os",
            "Se paga por formaci√≥n hasta los 21 a√±os del jugador"
        ],
        "Calculo Indemnizaci√≥n": [
            "Si jugador pasa de categor√≠a inferior a superior: promedio entre ambas categor√≠as",
            "Si jugador pasa de categor√≠a superior a inferior: indemnizaci√≥n seg√∫n la menor"
        ],
        "Tabla Confederaci√≥n": {
            "Confederaci√≥n": ['AFC', 'CAF', 'Concacaf', 'CONMEBOL', 'OFC', 'UEFA'],
            "Categor√≠a I": ['40,000 USD', '30,000 USD', '40,000 USD', '50,000 USD', '30,000 USD', '90,000 EUR'],
            "Categor√≠a II": ['10,000 USD', '10,000 USD', '10,000 USD', '30,000 USD', '10,000 USD', '60,000 EUR'],
            "Categor√≠a III": ['2,000 USD', '2,000 USD', '2,000 USD', '10,000 USD', '2,000 USD', '30,000 EUR'],
            "Categor√≠a IV": ['0 USD', '0 USD', '0 USD', '2,000 USD', '0 USD', '10,000 EUR']
        }
    }
    
    st.title("Esquema de Formaci√≥n")
    
    st.header("Reglas")
    for regla in esquema.get("Reglas", []):
        st.write("‚úÖ " + regla)

    st.header("C√°lculo de Indemnizaci√≥n")
    for calculo in esquema.get("Calculo Indemnizaci√≥n", []):
        st.write("üî¢ " + calculo)

    st.header("Tabla Confederaci√≥n")
    df_confederacion = pd.DataFrame(esquema.get("Tabla Confederaci√≥n", {}))
    st.write(df_confederacion)